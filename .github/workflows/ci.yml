name: CI / Lint + Tests + Deploy to test

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff coverage

      - name: Run linter (ruff)
        run: |
          ruff check src tests

      - name: Run tests with coverage
        run: |
          export PYTHONPATH=src
          coverage run -m pytest -q
          coverage report -m

  deploy-test:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    environment:
      name: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create artifact (zip)
        run: |
          mkdir -p dist
          zip -r dist/calc-dist.zip src README.md requirements.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: calc-dist
          path: dist/calc-dist.zip

      - name: Mark deployment complete
        run: echo "Packaged app uploaded to test environment."
